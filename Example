"""
This is a worked example. This code is starter code; you should edit and run it to
solve the problem. You can click the blue show solution button on the left to see
the answer if you get too stuck or want to check your work!
"""

# This tells PyCharm who Karel is
# Every Karel file has a line just like it
from karel.stanfordkarel import *

# this program executes in a special function called main
def main():
    move()
    pick_beeper()
    move()
    turn_left()
    move()
    beeper_right()
    move()
    put_beeper()
    move()
def beeper_right():
    turn_left()
    turn_left()
    turn_left()



# This is "boilerplate" code which launches your code
# when you hit the run button
if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to
solve the problem. You can click the blue show solution button on the left to see
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """
    Karel starts facing East in the bottom left corner of the world and ends facing East in the bottom right corner of the world.
    """
    pass  # Delete this line and write your code here! :)
    move()
    pick_beeper()
    turn_left()
    move()
    move()
    put_beeper()
    turn_left()
    turn_left()
    turn_left()
    move()

# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to
solve the problem. You can click the blue show solution button on the left to see
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """
    Karel starts facing East in the bottom left corner of the world and ends facing East in the bottom right corner of the world.
    """
    pass  # Delete this line and write your code here! :)
    move()
    turn_left()
    move()
    turn_rigth()
    move()
    turn_rigth() 
    move()
    put_beeper()
    turn_left()
    turn_left()
    move()
    turn_rigth()
    move()
    turn_rigth() 
    move()
    put_beeper()
    turn_left()
    turn_left()
    move()
    turn_rigth()
    move()
    turn_rigth() 
    move()
    put_beeper()
    turn_left()
    move()
    move()

def turn_rigth():
    turn_left()
    turn_left()
    turn_left()
# There is no need to edit code beyond this point
if __name__ == '__main__':
    main()


"""
This is a worked example. This code is starter code; you should edit and run it to
solve the problem. You can click the blue show solution button on the left to see
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """
    Karel starts facing East in the bottom left corner of the world and ends facing East in the bottom right corner of the world.
    """
    pass  # Delete this line and write your code here! :)

    turn_left()

    while front_is_clear():
        move()
    turn_right()
    while front_is_clear():
        move()
    turn_right()
    while front_is_clear():
        move()
    turn_left()
def turn_right():
    turn_left()
    turn_left()
    turn_left()
# There is no need to edit code beyond this point
if __name__ == '__main__':
    main()

"""
File: Rainbow.py
------------------------------
Karel makes a rainbow!
"""

"""
This is a worked example. This code is starter code; you should edit and run it to
solve the problem. You can click the blue show solution button on the left to see
the answer if you get too stuck or want to check your work!

Note: The unit test for this worked example is currently not working. Ignore it!
"""

from karel.stanfordkarel import *

def main():
    """
    You should write your code to make Karel do its task in
    this function. Make sure to delete the 'pass' line before
    starting to write your own code. You should also delete this
    comment and replace it with a better, more descriptive one.
    """
    pass  # Delete this line and write your code here! :)

    paint_corner("#FF0000")
    move() 
    paint_corner("#FF8849")
    move()
    paint_corner("#FFFF00")
    move()
    paint_corner("#008000")
    move()
    paint_corner("#0000FF")
    move()

# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
File: SteepleChaseKarel.py
--------------------------
Karel runs a steeple chase that is 9 avenues long.
Hurdles are of arbitrary height and placement.
"""

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!

Note: The starter code for this example is the solution.
"""

from karel.stanfordkarel import *


def main():
    """
    To run a race that is 9 avenues long, we need to move
    forward or jump hurdles 8 times. Let's use a for-loop for this!
    """
    for i in range(8):
        if front_is_clear():  # If there is no hurdle to jump, move
            move()
        else:  # If there is a hurdle (the front is blocked)
            jump_hurdle()


def jump_hurdle():
    """
    Pre-condition:  Facing East at bottom of hurdle
    Post-condition: Facing East at bottom in next avenue after hurdle
    """
    ascend_hurdle()
    move()
    descend_hurdle()


def ascend_hurdle():
    """
    Pre-condition:  Facing East at bottom of hurdle
    Post-condition: Facing East immediately above hurdle
    """
    turn_left()  # Face North
    
    # While there is a wall on the Eastern side of Karel, move up a row
    while right_is_blocked():
        move()
        
    turn_right()  # Face East


def descend_hurdle():
    """
    Pre-condition:  Facing East above and immediately after hurdle
    Post-condition: Facing East at bottom of hurdle
    """
    turn_right()  # Face South
    move_to_wall()  # Move to row 1
    turn_left()  # Face East


def move_to_wall():
    """
    Pre-condition:  None
    Post-condition: Facing first wall in whichever direction
                    Karel was facing previously
    """
    while front_is_clear():
        move()


def turn_right():
    """
    Pre-condition:  None
    Post-condition: Karel is facing to the right of whichever
                    direction Karel was facing previously
    """
    for i in range(3):
        turn_left()


# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """
    Places 10 beepers in the spot that Karel is standing.
    """
    pass # Delete this line and write your code here! :
    while no_beepers_present():
        for i in range(10):
            put_beeper()


# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """
    Moves forward 5 times
    """
    pass # Delete this line and write your code here! :)
    for i in range(5):
        move()

# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """
    Makes Karel do a sick backflip!!
    """
    pass # Delete this line and write your code here! :)
    for i in range(4):
        turn_left()

# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():

    for i in range(4):
        # Put beeper
        put_beeper()

        # Makes us move in a square motion when we do it four times
        move()
        turn_left()
    """
    Makes Karel place beepers in a square (4 beepers total) and end in the same position Karel starts in.
    """
    
    pass # Delete this line and write your code here! :)


# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """ Places 4 beepers in a row, starting with the position Karel is currently on. """
    pass  # Delete this line and write your code here! :)
    put_beeper()
    for i in range(3):
        move()
        put_beeper()

# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """ Moves Karel forward until a wall. """
    
    pass  # Delete this line and write your code here! :)
    while front_is_clear():
        move()

# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """ Picks up beepers in current spot until there are none left."""
    
    pass  # Delete this line and write your code here! :)
    while beepers_present():
        pick_beeper()
        


# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """ Turns Karel until facing a wall. """
    
    pass  # Delete this line and write your code here! :)
    while front_is_clear():
        turn_left()
      
# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """
    Inverts the spot Karel is currently standing on.
    """
    
    pass # Delete this line and write your code here! :)
    if beepers_present():
        pick_beeper()
    else:
        put_beeper()

# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

"""
This is a worked example. This code is starter code; you should edit and run it to 
solve the problem. You can click the blue show solution button on the left to see 
the answer if you get too stuck or want to check your work!
"""

from karel.stanfordkarel import *

def main():
    """
    Karel will move and put a beeper down if there isn't a wall; Karel will just put a beeper down if there is.
    """
    
    pass # Delete this line and write your code here! :)
    if front_is_clear():
        move()
        put_beeper()
    else:
        put_beeper()

# There is no need to edit code beyond this point

if __name__ == '__main__':
    main()

